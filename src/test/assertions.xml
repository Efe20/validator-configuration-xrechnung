<?xml version="1.0" encoding="UTF-8"?>
<a:assertions xmlns:a="http://www.xoev.de/de/validator/framework/1/assertions">
   <a:namespace prefix="rep">http://www.xoev.de/de/validator/varl/1</a:namespace>
   <a:namespace prefix="s">http://www.xoev.de/de/validator/framework/1/scenarios</a:namespace>
   <a:namespace prefix="html">http://www.w3.org/1999/xhtml</a:namespace>
   <a:assertion report-doc="ubl001.xml" test="rep:report/@valid = 'true'">Report has status valid</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo='">Document hash matches</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001')">Document reference matches</a:assertion>
   <a:assertion report-doc="ubl001.xml" test="rep:report/rep:scenarioMatched">Scenario found</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)'">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:scenarioMatched/rep:documentData/*">Document data found</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']">Schema validation performed</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']">First schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true'">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true'">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="ubl001.xml" test="rep:report/rep:assessment/rep:accept">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')]">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="ubl001.xml"
                test="not(rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')])">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="ubl002.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="ubl002.xml" test="rep:report/rep:scenarioMatched">Scenario found</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)'">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:documentData/*">Document data found</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']">Schema validation performed</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']">First schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning']">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation]">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true'">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:assessment/rep:accept)">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="ubl002.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="ubl003.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="ubl003.xml" test="rep:report/rep:scenarioMatched">Scenario found</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)'">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/rep:documentData/*">Document data found</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']">Schema validation performed</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']">First schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation]">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true'">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="ubl003.xml" test="rep:report/rep:assessment/rep:accept">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')]">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="ubl003.xml"
                test="not(rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')])">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="ubl004.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="ubl004.xml" test="rep:report/rep:scenarioMatched">Scenario found</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)'">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:scenarioMatched/rep:documentData/*">Document data found</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']">Schema validation performed</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']">First schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true'">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:assessment/rep:accept)">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="ubl004.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="ubl005.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="ubl005.xml" test="rep:report/rep:scenarioMatched">Scenario found</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)'">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="rep:report/rep:scenarioMatched/rep:documentData/*">Document data found</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']">Schema validation performed</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true')">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error']">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber]">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber]">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1'])">First schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2'])">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:assessment/rep:accept)">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="ubl005.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="ubl006.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="ubl006.xml" test="not(rep:report/rep:scenarioMatched)">Scenario found</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)')">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:documentData/*)">Document data found</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd'])">Schema validation performed</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true')">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1'])">First schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2'])">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:assessment/rep:accept)">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="ubl006.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="ubl007.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="ubl007.xml" test="not(rep:report/rep:scenarioMatched)">Scenario found</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)')">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:documentData/*)">Document data found</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd'])">Schema validation performed</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true')">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1'])">First schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2'])">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:assessment/rep:accept)">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="ubl007.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="ubl008.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="ubl008.xml" test="rep:report/rep:scenarioMatched">Scenario found</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)')">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)'">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:scenarioMatched/rep:documentData/*">Document data found</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']">Schema validation performed</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']">First schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation]">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:assessment/rep:accept)">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="ubl008.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="bin001.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="bin001.xml" test="not(rep:report/rep:scenarioMatched)">Scenario found</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)')">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)')">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:documentData/*)">Document data found</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd'])">Schema validation performed</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true')">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1'])">First schematron validation performed</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error'])">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning'])">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation])">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2'])">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:assessment/rep:accept)">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="bin001.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]">HTML explanation for rejection recommends rejection</a:assertion>
   <a:assertion report-doc="cii001.xml" test="not(rep:report/@valid = 'true')">Report has status valid</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="format-dateTime(rep:report/rep:timestamp, '[Y0001][M01][D01]') = format-date(current-date(),'[Y0001][M01][D01]')">Timestamp is today</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:documentIdentification/rep:documentHash/rep:hashValue = 'TfvPbPcDevSv5anZIbgsyLioTLdzjnLTSXRhMsBlCIo=')">Document hash matches</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(contains(rep:report/rep:documentIdentification/rep:documentReference, 'ubl001'))">Document reference matches</a:assertion>
   <a:assertion report-doc="cii001.xml" test="rep:report/rep:scenarioMatched">Scenario found</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL Invoice)')">UBL Invoice scenario found</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (UBL CreditNote)')">UBL CreditNote scenario found</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/s:scenario/s:name = 'EN16931 CIUS XRechnung (CII)'">CII Invoice scenario found</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/rep:documentData/*">Document data found</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']">Schema validation performed</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/@valid = 'true'">Schema validatation has status valid</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'error'])">Schema validatation has error message</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'warning'])">Schema validatation has warning message</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@level = 'information'])">Schema validatation has information message</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@lineNumber])">Schema validatation has message with line number</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-xsd']/rep:message[@columnNumber])">Schema validatation has message with column number</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']">First schematron validation performed</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/@valid = 'true')">First schematron validation has status valid</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'error']">First schematron validatation has error message</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'warning']">First schematron validatation has warning message</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@level = 'information'])">First schematron validatation has information message</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.1']/rep:message[@xpathLocation]">Schema validatation has message with xpath location</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']">Second schematron validation performed</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:scenarioMatched/rep:validationStepResult[@id = 'val-sch.2']/@valid = 'true')">Second schematron validation has status valid</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml'])">WFR validation step exists for no scenario found </a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:noScenarioMatched/rep:validationStepResult[@id = 'val-xml']/rep:message)">WFR validation step for no scenario found has message (XML case)</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:assessment/rep:accept)">Assessment recommends acceptance</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report'])">HTML explanation for acceptance exists</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="not(rep:report/rep:assessment/rep:accept/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument anzunehmen')])">HTML explanation for acceptance recommends acceptance</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']">HTML explanation for rejection exists</a:assertion>
   <a:assertion report-doc="cii001.xml"
                test="rep:report/rep:assessment/rep:reject/rep:explanation/html:html[@data-report-type = 'report']//*[contains(., 'Es wird empfohlen das Dokument zurÃ¼ckzuweisen')]">HTML explanation for rejection recommends rejection</a:assertion>
</a:assertions>
